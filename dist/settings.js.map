{
  "version": 3,
  "sources": ["../node_modules/webextension-polyfill/dist/browser-polyfill.js", "../node_modules/svelte/src/runtime/internal/utils.js", "../node_modules/svelte/src/runtime/internal/globals.js", "../node_modules/svelte/src/runtime/internal/ResizeObserverSingleton.js", "../node_modules/svelte/src/runtime/internal/dom.js", "../node_modules/svelte/src/runtime/internal/lifecycle.js", "../node_modules/svelte/src/runtime/internal/scheduler.js", "../node_modules/svelte/src/runtime/internal/transitions.js", "../node_modules/svelte/src/shared/boolean_attributes.js", "../node_modules/svelte/src/runtime/internal/Component.js", "../node_modules/svelte/src/shared/version.js", "../node_modules/svelte/src/runtime/internal/disclose-version/index.js", "../src/models.ts", "../src/settings-connector.ts", "../src/settings/settings.svelte", "../src/settings/settings.ts"],
  "sourcesContent": ["/* webextension-polyfill - v0.10.0 - Fri Aug 12 2022 19:42:44 */\n/* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n/* vim: set sts=2 sw=2 et tw=80: */\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\"use strict\";\n\nif (!globalThis.chrome?.runtime?.id) {\n  throw new Error(\"This script should only be loaded in a browser extension.\");\n}\n\nif (typeof globalThis.browser === \"undefined\" || Object.getPrototypeOf(globalThis.browser) !== Object.prototype) {\n  const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\";\n\n  // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n  // optimization for Firefox. Since Spidermonkey does not fully parse the\n  // contents of a function until the first time it's called, and since it will\n  // never actually need to be called, this allows the polyfill to be included\n  // in Firefox nearly for free.\n  const wrapAPIs = extensionAPIs => {\n    // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n    // at build time by replacing the following \"include\" with the content of the\n    // JSON file.\n    const apiMetadata = {\n      \"alarms\": {\n        \"clear\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"clearAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"get\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"bookmarks\": {\n        \"create\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getChildren\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getRecent\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getSubTree\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getTree\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"move\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeTree\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"search\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      },\n      \"browserAction\": {\n        \"disable\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"enable\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"getBadgeBackgroundColor\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getBadgeText\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"openPopup\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"setBadgeBackgroundColor\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setBadgeText\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setIcon\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"setPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        }\n      },\n      \"browsingData\": {\n        \"remove\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"removeCache\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeCookies\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeDownloads\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeFormData\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeHistory\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeLocalStorage\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removePasswords\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removePluginData\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"settings\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"commands\": {\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"contextMenus\": {\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      },\n      \"cookies\": {\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAllCookieStores\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"set\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"devtools\": {\n        \"inspectedWindow\": {\n          \"eval\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2,\n            \"singleCallbackArg\": false\n          }\n        },\n        \"panels\": {\n          \"create\": {\n            \"minArgs\": 3,\n            \"maxArgs\": 3,\n            \"singleCallbackArg\": true\n          },\n          \"elements\": {\n            \"createSidebarPane\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          }\n        }\n      },\n      \"downloads\": {\n        \"cancel\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"download\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"erase\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getFileIcon\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"open\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"pause\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeFile\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"resume\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"search\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"show\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        }\n      },\n      \"extension\": {\n        \"isAllowedFileSchemeAccess\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"isAllowedIncognitoAccess\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"history\": {\n        \"addUrl\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"deleteAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"deleteRange\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"deleteUrl\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getVisits\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"search\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"i18n\": {\n        \"detectLanguage\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAcceptLanguages\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"identity\": {\n        \"launchWebAuthFlow\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"idle\": {\n        \"queryState\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"management\": {\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getSelf\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"setEnabled\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"uninstallSelf\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        }\n      },\n      \"notifications\": {\n        \"clear\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"create\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getPermissionLevel\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      },\n      \"pageAction\": {\n        \"getPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"hide\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setIcon\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"setPopup\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"setTitle\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        },\n        \"show\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1,\n          \"fallbackToNoCallback\": true\n        }\n      },\n      \"permissions\": {\n        \"contains\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"request\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"runtime\": {\n        \"getBackgroundPage\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getPlatformInfo\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"openOptionsPage\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"requestUpdateCheck\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"sendMessage\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 3\n        },\n        \"sendNativeMessage\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"setUninstallURL\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"sessions\": {\n        \"getDevices\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getRecentlyClosed\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"restore\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        }\n      },\n      \"storage\": {\n        \"local\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getBytesInUse\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"managed\": {\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getBytesInUse\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"sync\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getBytesInUse\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        }\n      },\n      \"tabs\": {\n        \"captureVisibleTab\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 2\n        },\n        \"create\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"detectLanguage\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"discard\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"duplicate\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"executeScript\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getCurrent\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        },\n        \"getZoom\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getZoomSettings\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"goBack\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"goForward\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"highlight\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"insertCSS\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"move\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        },\n        \"query\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"reload\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 2\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"removeCSS\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"sendMessage\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 3\n        },\n        \"setZoom\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"setZoomSettings\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"update\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        }\n      },\n      \"topSites\": {\n        \"get\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"webNavigation\": {\n        \"getAllFrames\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"getFrame\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        }\n      },\n      \"webRequest\": {\n        \"handlerBehaviorChanged\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 0\n        }\n      },\n      \"windows\": {\n        \"create\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"get\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 2\n        },\n        \"getAll\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getCurrent\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"getLastFocused\": {\n          \"minArgs\": 0,\n          \"maxArgs\": 1\n        },\n        \"remove\": {\n          \"minArgs\": 1,\n          \"maxArgs\": 1\n        },\n        \"update\": {\n          \"minArgs\": 2,\n          \"maxArgs\": 2\n        }\n      }\n    };\n\n    if (Object.keys(apiMetadata).length === 0) {\n      throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n    }\n\n    /**\n     * A WeakMap subclass which creates and stores a value for any key which does\n     * not exist when accessed, but behaves exactly as an ordinary WeakMap\n     * otherwise.\n     *\n     * @param {function} createItem\n     *        A function which will be called in order to create the value for any\n     *        key which does not exist, the first time it is accessed. The\n     *        function receives, as its only argument, the key being created.\n     */\n    class DefaultWeakMap extends WeakMap {\n      constructor(createItem, items = undefined) {\n        super(items);\n        this.createItem = createItem;\n      }\n\n      get(key) {\n        if (!this.has(key)) {\n          this.set(key, this.createItem(key));\n        }\n\n        return super.get(key);\n      }\n    }\n\n    /**\n     * Returns true if the given object is an object with a `then` method, and can\n     * therefore be assumed to behave as a Promise.\n     *\n     * @param {*} value The value to test.\n     * @returns {boolean} True if the value is thenable.\n     */\n    const isThenable = value => {\n      return value && typeof value === \"object\" && typeof value.then === \"function\";\n    };\n\n    /**\n     * Creates and returns a function which, when called, will resolve or reject\n     * the given promise based on how it is called:\n     *\n     * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n     *   the promise is rejected with that value.\n     * - If the function is called with exactly one argument, the promise is\n     *   resolved to that value.\n     * - Otherwise, the promise is resolved to an array containing all of the\n     *   function's arguments.\n     *\n     * @param {object} promise\n     *        An object containing the resolution and rejection functions of a\n     *        promise.\n     * @param {function} promise.resolve\n     *        The promise's resolution function.\n     * @param {function} promise.reject\n     *        The promise's rejection function.\n     * @param {object} metadata\n     *        Metadata about the wrapped method which has created the callback.\n     * @param {boolean} metadata.singleCallbackArg\n     *        Whether or not the promise is resolved with only the first\n     *        argument of the callback, alternatively an array of all the\n     *        callback arguments is resolved. By default, if the callback\n     *        function is invoked with only a single argument, that will be\n     *        resolved to the promise, while all arguments will be resolved as\n     *        an array if multiple are given.\n     *\n     * @returns {function}\n     *        The generated callback function.\n     */\n    const makeCallback = (promise, metadata) => {\n      return (...callbackArgs) => {\n        if (extensionAPIs.runtime.lastError) {\n          promise.reject(new Error(extensionAPIs.runtime.lastError.message));\n        } else if (metadata.singleCallbackArg ||\n                   (callbackArgs.length <= 1 && metadata.singleCallbackArg !== false)) {\n          promise.resolve(callbackArgs[0]);\n        } else {\n          promise.resolve(callbackArgs);\n        }\n      };\n    };\n\n    const pluralizeArguments = (numArgs) => numArgs == 1 ? \"argument\" : \"arguments\";\n\n    /**\n     * Creates a wrapper function for a method with the given name and metadata.\n     *\n     * @param {string} name\n     *        The name of the method which is being wrapped.\n     * @param {object} metadata\n     *        Metadata about the method being wrapped.\n     * @param {integer} metadata.minArgs\n     *        The minimum number of arguments which must be passed to the\n     *        function. If called with fewer than this number of arguments, the\n     *        wrapper will raise an exception.\n     * @param {integer} metadata.maxArgs\n     *        The maximum number of arguments which may be passed to the\n     *        function. If called with more than this number of arguments, the\n     *        wrapper will raise an exception.\n     * @param {boolean} metadata.singleCallbackArg\n     *        Whether or not the promise is resolved with only the first\n     *        argument of the callback, alternatively an array of all the\n     *        callback arguments is resolved. By default, if the callback\n     *        function is invoked with only a single argument, that will be\n     *        resolved to the promise, while all arguments will be resolved as\n     *        an array if multiple are given.\n     *\n     * @returns {function(object, ...*)}\n     *       The generated wrapper function.\n     */\n    const wrapAsyncFunction = (name, metadata) => {\n      return function asyncFunctionWrapper(target, ...args) {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        return new Promise((resolve, reject) => {\n          if (metadata.fallbackToNoCallback) {\n            // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n            // and so the polyfill will try to call it with a callback first, and it will fallback\n            // to not passing the callback if the first call fails.\n            try {\n              target[name](...args, makeCallback({resolve, reject}, metadata));\n            } catch (cbError) {\n              console.warn(`${name} API method doesn't seem to support the callback parameter, ` +\n                           \"falling back to call it without a callback: \", cbError);\n\n              target[name](...args);\n\n              // Update the API method metadata, so that the next API calls will not try to\n              // use the unsupported callback anymore.\n              metadata.fallbackToNoCallback = false;\n              metadata.noCallback = true;\n\n              resolve();\n            }\n          } else if (metadata.noCallback) {\n            target[name](...args);\n            resolve();\n          } else {\n            target[name](...args, makeCallback({resolve, reject}, metadata));\n          }\n        });\n      };\n    };\n\n    /**\n     * Wraps an existing method of the target object, so that calls to it are\n     * intercepted by the given wrapper function. The wrapper function receives,\n     * as its first argument, the original `target` object, followed by each of\n     * the arguments passed to the original method.\n     *\n     * @param {object} target\n     *        The original target object that the wrapped method belongs to.\n     * @param {function} method\n     *        The method being wrapped. This is used as the target of the Proxy\n     *        object which is created to wrap the method.\n     * @param {function} wrapper\n     *        The wrapper function which is called in place of a direct invocation\n     *        of the wrapped method.\n     *\n     * @returns {Proxy<function>}\n     *        A Proxy object for the given method, which invokes the given wrapper\n     *        method in its place.\n     */\n    const wrapMethod = (target, method, wrapper) => {\n      return new Proxy(method, {\n        apply(targetMethod, thisObj, args) {\n          return wrapper.call(thisObj, target, ...args);\n        },\n      });\n    };\n\n    let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n\n    /**\n     * Wraps an object in a Proxy which intercepts and wraps certain methods\n     * based on the given `wrappers` and `metadata` objects.\n     *\n     * @param {object} target\n     *        The target object to wrap.\n     *\n     * @param {object} [wrappers = {}]\n     *        An object tree containing wrapper functions for special cases. Any\n     *        function present in this object tree is called in place of the\n     *        method in the same location in the `target` object tree. These\n     *        wrapper methods are invoked as described in {@see wrapMethod}.\n     *\n     * @param {object} [metadata = {}]\n     *        An object tree containing metadata used to automatically generate\n     *        Promise-based wrapper functions for asynchronous. Any function in\n     *        the `target` object tree which has a corresponding metadata object\n     *        in the same location in the `metadata` tree is replaced with an\n     *        automatically-generated wrapper function, as described in\n     *        {@see wrapAsyncFunction}\n     *\n     * @returns {Proxy<object>}\n     */\n    const wrapObject = (target, wrappers = {}, metadata = {}) => {\n      let cache = Object.create(null);\n      let handlers = {\n        has(proxyTarget, prop) {\n          return prop in target || prop in cache;\n        },\n\n        get(proxyTarget, prop, receiver) {\n          if (prop in cache) {\n            return cache[prop];\n          }\n\n          if (!(prop in target)) {\n            return undefined;\n          }\n\n          let value = target[prop];\n\n          if (typeof value === \"function\") {\n            // This is a method on the underlying object. Check if we need to do\n            // any wrapping.\n\n            if (typeof wrappers[prop] === \"function\") {\n              // We have a special-case wrapper for this method.\n              value = wrapMethod(target, target[prop], wrappers[prop]);\n            } else if (hasOwnProperty(metadata, prop)) {\n              // This is an async method that we have metadata for. Create a\n              // Promise wrapper for it.\n              let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n              value = wrapMethod(target, target[prop], wrapper);\n            } else {\n              // This is a method that we don't know or care about. Return the\n              // original method, bound to the underlying object.\n              value = value.bind(target);\n            }\n          } else if (typeof value === \"object\" && value !== null &&\n                     (hasOwnProperty(wrappers, prop) ||\n                      hasOwnProperty(metadata, prop))) {\n            // This is an object that we need to do some wrapping for the children\n            // of. Create a sub-object wrapper for it with the appropriate child\n            // metadata.\n            value = wrapObject(value, wrappers[prop], metadata[prop]);\n          } else if (hasOwnProperty(metadata, \"*\")) {\n            // Wrap all properties in * namespace.\n            value = wrapObject(value, wrappers[prop], metadata[\"*\"]);\n          } else {\n            // We don't need to do any wrapping for this property,\n            // so just forward all access to the underlying object.\n            Object.defineProperty(cache, prop, {\n              configurable: true,\n              enumerable: true,\n              get() {\n                return target[prop];\n              },\n              set(value) {\n                target[prop] = value;\n              },\n            });\n\n            return value;\n          }\n\n          cache[prop] = value;\n          return value;\n        },\n\n        set(proxyTarget, prop, value, receiver) {\n          if (prop in cache) {\n            cache[prop] = value;\n          } else {\n            target[prop] = value;\n          }\n          return true;\n        },\n\n        defineProperty(proxyTarget, prop, desc) {\n          return Reflect.defineProperty(cache, prop, desc);\n        },\n\n        deleteProperty(proxyTarget, prop) {\n          return Reflect.deleteProperty(cache, prop);\n        },\n      };\n\n      // Per contract of the Proxy API, the \"get\" proxy handler must return the\n      // original value of the target if that value is declared read-only and\n      // non-configurable. For this reason, we create an object with the\n      // prototype set to `target` instead of using `target` directly.\n      // Otherwise we cannot return a custom object for APIs that\n      // are declared read-only and non-configurable, such as `chrome.devtools`.\n      //\n      // The proxy handlers themselves will still use the original `target`\n      // instead of the `proxyTarget`, so that the methods and properties are\n      // dereferenced via the original targets.\n      let proxyTarget = Object.create(target);\n      return new Proxy(proxyTarget, handlers);\n    };\n\n    /**\n     * Creates a set of wrapper functions for an event object, which handles\n     * wrapping of listener functions that those messages are passed.\n     *\n     * A single wrapper is created for each listener function, and stored in a\n     * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n     * retrieve the original wrapper, so that  attempts to remove a\n     * previously-added listener work as expected.\n     *\n     * @param {DefaultWeakMap<function, function>} wrapperMap\n     *        A DefaultWeakMap object which will create the appropriate wrapper\n     *        for a given listener function when one does not exist, and retrieve\n     *        an existing one when it does.\n     *\n     * @returns {object}\n     */\n    const wrapEvent = wrapperMap => ({\n      addListener(target, listener, ...args) {\n        target.addListener(wrapperMap.get(listener), ...args);\n      },\n\n      hasListener(target, listener) {\n        return target.hasListener(wrapperMap.get(listener));\n      },\n\n      removeListener(target, listener) {\n        target.removeListener(wrapperMap.get(listener));\n      },\n    });\n\n    const onRequestFinishedWrappers = new DefaultWeakMap(listener => {\n      if (typeof listener !== \"function\") {\n        return listener;\n      }\n\n      /**\n       * Wraps an onRequestFinished listener function so that it will return a\n       * `getContent()` property which returns a `Promise` rather than using a\n       * callback API.\n       *\n       * @param {object} req\n       *        The HAR entry object representing the network request.\n       */\n      return function onRequestFinished(req) {\n        const wrappedReq = wrapObject(req, {} /* wrappers */, {\n          getContent: {\n            minArgs: 0,\n            maxArgs: 0,\n          },\n        });\n        listener(wrappedReq);\n      };\n    });\n\n    const onMessageWrappers = new DefaultWeakMap(listener => {\n      if (typeof listener !== \"function\") {\n        return listener;\n      }\n\n      /**\n       * Wraps a message listener function so that it may send responses based on\n       * its return value, rather than by returning a sentinel value and calling a\n       * callback. If the listener function returns a Promise, the response is\n       * sent when the promise either resolves or rejects.\n       *\n       * @param {*} message\n       *        The message sent by the other end of the channel.\n       * @param {object} sender\n       *        Details about the sender of the message.\n       * @param {function(*)} sendResponse\n       *        A callback which, when called with an arbitrary argument, sends\n       *        that value as a response.\n       * @returns {boolean}\n       *        True if the wrapped listener returned a Promise, which will later\n       *        yield a response. False otherwise.\n       */\n      return function onMessage(message, sender, sendResponse) {\n        let didCallSendResponse = false;\n\n        let wrappedSendResponse;\n        let sendResponsePromise = new Promise(resolve => {\n          wrappedSendResponse = function(response) {\n            didCallSendResponse = true;\n            resolve(response);\n          };\n        });\n\n        let result;\n        try {\n          result = listener(message, sender, wrappedSendResponse);\n        } catch (err) {\n          result = Promise.reject(err);\n        }\n\n        const isResultThenable = result !== true && isThenable(result);\n\n        // If the listener didn't returned true or a Promise, or called\n        // wrappedSendResponse synchronously, we can exit earlier\n        // because there will be no response sent from this listener.\n        if (result !== true && !isResultThenable && !didCallSendResponse) {\n          return false;\n        }\n\n        // A small helper to send the message if the promise resolves\n        // and an error if the promise rejects (a wrapped sendMessage has\n        // to translate the message into a resolved promise or a rejected\n        // promise).\n        const sendPromisedResult = (promise) => {\n          promise.then(msg => {\n            // send the message value.\n            sendResponse(msg);\n          }, error => {\n            // Send a JSON representation of the error if the rejected value\n            // is an instance of error, or the object itself otherwise.\n            let message;\n            if (error && (error instanceof Error ||\n                typeof error.message === \"string\")) {\n              message = error.message;\n            } else {\n              message = \"An unexpected error occurred\";\n            }\n\n            sendResponse({\n              __mozWebExtensionPolyfillReject__: true,\n              message,\n            });\n          }).catch(err => {\n            // Print an error on the console if unable to send the response.\n            console.error(\"Failed to send onMessage rejected reply\", err);\n          });\n        };\n\n        // If the listener returned a Promise, send the resolved value as a\n        // result, otherwise wait the promise related to the wrappedSendResponse\n        // callback to resolve and send it as a response.\n        if (isResultThenable) {\n          sendPromisedResult(result);\n        } else {\n          sendPromisedResult(sendResponsePromise);\n        }\n\n        // Let Chrome know that the listener is replying.\n        return true;\n      };\n    });\n\n    const wrappedSendMessageCallback = ({reject, resolve}, reply) => {\n      if (extensionAPIs.runtime.lastError) {\n        // Detect when none of the listeners replied to the sendMessage call and resolve\n        // the promise to undefined as in Firefox.\n        // See https://github.com/mozilla/webextension-polyfill/issues/130\n        if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {\n          resolve();\n        } else {\n          reject(new Error(extensionAPIs.runtime.lastError.message));\n        }\n      } else if (reply && reply.__mozWebExtensionPolyfillReject__) {\n        // Convert back the JSON representation of the error into\n        // an Error instance.\n        reject(new Error(reply.message));\n      } else {\n        resolve(reply);\n      }\n    };\n\n    const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args) => {\n      if (args.length < metadata.minArgs) {\n        throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n      }\n\n      if (args.length > metadata.maxArgs) {\n        throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n      }\n\n      return new Promise((resolve, reject) => {\n        const wrappedCb = wrappedSendMessageCallback.bind(null, {resolve, reject});\n        args.push(wrappedCb);\n        apiNamespaceObj.sendMessage(...args);\n      });\n    };\n\n    const staticWrappers = {\n      devtools: {\n        network: {\n          onRequestFinished: wrapEvent(onRequestFinishedWrappers),\n        },\n      },\n      runtime: {\n        onMessage: wrapEvent(onMessageWrappers),\n        onMessageExternal: wrapEvent(onMessageWrappers),\n        sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {minArgs: 1, maxArgs: 3}),\n      },\n      tabs: {\n        sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {minArgs: 2, maxArgs: 3}),\n      },\n    };\n    const settingMetadata = {\n      clear: {minArgs: 1, maxArgs: 1},\n      get: {minArgs: 1, maxArgs: 1},\n      set: {minArgs: 1, maxArgs: 1},\n    };\n    apiMetadata.privacy = {\n      network: {\"*\": settingMetadata},\n      services: {\"*\": settingMetadata},\n      websites: {\"*\": settingMetadata},\n    };\n\n    return wrapObject(extensionAPIs, staticWrappers, apiMetadata);\n  };\n\n  // The build process adds a UMD wrapper around this file, which makes the\n  // `module` variable available.\n  module.exports = wrapAPIs(chrome);\n} else {\n  module.exports = globalThis.browser;\n}\n", "/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n", "/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n", "import { globals } from './globals.js';\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nexport class ResizeObserverSingleton {\n\t/**\n\t * @private\n\t * @readonly\n\t * @type {WeakMap<Element, import('./private.js').Listener>}\n\t */\n\t_listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n\t/**\n\t * @private\n\t * @type {ResizeObserver}\n\t */\n\t_observer = undefined;\n\n\t/** @type {ResizeObserverOptions} */\n\toptions;\n\n\t/** @param {ResizeObserverOptions} options */\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * @param {Element} element\n\t * @param {import('./private.js').Listener} listener\n\t * @returns {() => void}\n\t */\n\tobserve(element, listener) {\n\t\tthis._listeners.set(element, listener);\n\t\tthis._getObserver().observe(element, this.options);\n\t\treturn () => {\n\t\t\tthis._listeners.delete(element);\n\t\t\tthis._observer.unobserve(element); // this line can probably be removed\n\t\t};\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_getObserver() {\n\t\treturn (\n\t\t\tthis._observer ??\n\t\t\t(this._observer = new ResizeObserver((entries) => {\n\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\tResizeObserverSingleton.entries.set(entry.target, entry);\n\t\t\t\t\tthis._listeners.get(entry.target)?.(entry);\n\t\t\t\t}\n\t\t\t}))\n\t\t);\n\t}\n}\n\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n", "import { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\nimport { contenteditable_truthy_values, has_prop } from './utils.js';\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst myChildren = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmyChildren.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = myChildren;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seqLen =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seqLen] + 1;\n\t\tconst newLen = seqLen + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[newLen] = i;\n\t\tlongest = Math.max(newLen, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst toMove = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\ttoMove.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\ttoMove.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\ttoMove.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < toMove.length; i++) {\n\t\twhile (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(toMove[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/**\n * @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/**\n * @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} processNode\n * @param {() => R} createNode\n * @param {boolean} dontUpdateLastIndex\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst resultNode = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = processNode(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dontUpdateLastIndex) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = processNode(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dontUpdateLastIndex) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn createNode();\n\t})();\n\tresultNode.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn resultNode;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst dataStr = '' + data;\n\t\t\tif (node.data.startsWith(dataStr)) {\n\t\t\t\tif (node.data.length !== dataStr.length) {\n\t\t\t\t\treturn node.splitText(dataStr.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = dataStr;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n", "import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n", "import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n", "import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro \u2014 restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro \u2014 we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro \u2014 needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n", "const _boolean_attributes = /** @type {const} */ ([\n\t'allowfullscreen',\n\t'allowpaymentrequest',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'defer',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'selected'\n]);\n\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n *\n * @type {Set<string>}\n */\nexport const boolean_attributes = new Set([..._boolean_attributes]);\n\n/** @typedef {typeof _boolean_attributes[number]} BooleanAttributes */\n", "import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n/** @returns {void} */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\tconst nodes = children(options.target);\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom\n) {\n\tconst Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n", "// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.0.5';\nexport const PUBLIC_VERSION = '4';\n", "import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n", "export type BrowserMessageType = 'getColorScheme' | 'gotColorScheme';\n\nexport type BrowserMessage = {\n  type: BrowserMessageType;\n  value?: any;\n};\n\nexport type AppSettings = {\n  displayHelpMessage: boolean;\n};\n\nexport const DEFAULT_SETTINGS: AppSettings = {\n  displayHelpMessage: true\n};\n\nexport type ColorScheme = 'light' | 'dark';\n", "import browser from 'webextension-polyfill';\nimport { type AppSettings, DEFAULT_SETTINGS } from './models';\n\nclass SettingsConnector {\n  private static readonly settingsKey = 'settings';\n  async getAppSettings() {\n    let settings = (\n      await browser.storage.sync.get(SettingsConnector.settingsKey)\n    )[SettingsConnector.settingsKey] as Partial<AppSettings> | undefined;\n    if (\n      !settings ||\n      Object.keys(settings).length !== Object.keys(DEFAULT_SETTINGS).length\n    ) {\n      console.log('no settings found, using default settings');\n      await browser.storage.sync.set({\n        [SettingsConnector.settingsKey]: DEFAULT_SETTINGS\n      });\n      settings = DEFAULT_SETTINGS;\n    }\n    return settings as AppSettings;\n  }\n\n  async updateSettings(newSettings: Partial<AppSettings>) {\n    const settings = await this.getAppSettings();\n    const updatedSettings = { ...settings, ...newSettings };\n    await browser.storage.sync.set({\n      [SettingsConnector.settingsKey]: updatedSettings\n    });\n    return updatedSettings;\n  }\n}\n\nconst singleton = new SettingsConnector();\nexport default singleton;\n", "<script lang=\"ts\">\n  import { type AppSettings } from '../models';\n  import settingsConnector from '../settings-connector';\n\n  type InputChangeEvent = Event & {\n    currentTarget: EventTarget & HTMLInputElement;\n  };\n\n  let appSettings: AppSettings | undefined;\n  settingsConnector\n    .getAppSettings()\n    .then(settingsFromStorage => (appSettings = settingsFromStorage));\n\n  const updateDisplayHelpMessage = (e: InputChangeEvent) => {\n    const target = e.target as HTMLInputElement;\n    const displayHelpMessage = target.checked;\n    settingsConnector.updateSettings({ displayHelpMessage });\n  };\n\n  $: {\n    if (appSettings?.displayHelpMessage) console.log('Get help on GitHub!');\n  }\n</script>\n\n{#if appSettings}\n  <h1>Settings</h1>\n  <section>\n    <form>\n      <div class=\"form-group\">\n        <input\n          type=\"checkbox\"\n          id=\"show-help-message\"\n          name=\"show-help-message\"\n          checked={appSettings.displayHelpMessage}\n          on:change={updateDisplayHelpMessage}\n        />\n        <label for=\"show-help-message\">Show help message in console</label>\n      </div>\n    </form>\n  </section>\n{/if}\n\n<style>\n  h1 {\n    padding: 1em 0;\n  }\n</style>\n", "import App from './settings.svelte';\nnew App({ target: document.getElementById('root') as HTMLDivElement });\n"],
  "mappings": "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",
  "names": ["globalThis", "chrome", "runtime", "id", "Error", "browser", "Object", "getPrototypeOf", "prototype", "CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE", "wrapAPIs", "extensionAPIs", "apiMetadata", "keys", "length", "DefaultWeakMap", "WeakMap", "constructor", "createItem", "items", "undefined", "get", "key", "has", "set", "isThenable", "value", "then", "makeCallback", "promise", "metadata", "callbackArgs", "lastError", "reject", "message", "singleCallbackArg", "resolve", "pluralizeArguments", "numArgs", "wrapAsyncFunction", "name", "asyncFunctionWrapper", "target", "args", "minArgs", "maxArgs", "Promise", "fallbackToNoCallback", "cbError", "console", "warn", "noCallback", "wrapMethod", "method", "wrapper", "Proxy", "apply", "targetMethod", "thisObj", "call", "hasOwnProperty", "Function", "bind", "wrapObject", "wrappers", "cache", "create", "handlers", "proxyTarget", "prop", "receiver", "defineProperty", "configurable", "enumerable", "desc", "Reflect", "deleteProperty", "wrapEvent", "wrapperMap", "addListener", "listener", "hasListener", "removeListener", "onRequestFinishedWrappers", "onRequestFinished", "req", "wrappedReq", "getContent", "onMessageWrappers", "onMessage", "sender", "sendResponse", "didCallSendResponse", "wrappedSendResponse", "sendResponsePromise", "response", "result", "err", "isResultThenable", "sendPromisedResult", "msg", "error", "__mozWebExtensionPolyfillReject__", "catch", "wrappedSendMessageCallback", "reply", "wrappedSendMessage", "apiNamespaceObj", "wrappedCb", "push", "sendMessage", "staticWrappers", "devtools", "network", "onMessageExternal", "tabs", "settingMetadata", "clear", "privacy", "services", "websites", "module", "exports", "element", "element", "element", "instance", "create_fragment", "create_slot", "attr", "browser", "ctx"]
}
